<Containers::SearchBox
  @driver={{@driver}}
  @view={{@view}}
  @autocompleteMinimumCharacters={{@autocompleteMinimumCharacters}}
  @autocompleteResults={{@autocompleteResults}}
  @autocompleteSuggestions={{@autocompleteSuggestions}}
  @autocompleteView={{@autocompleteView}}
  @shouldClearFilters={{@shouldClearFilters}}
  @debounceLength={{@debounceLength}}
  @inputProps={{@inputProps}}
  @inputView={{@inputView}}
  @onSelectAutocomplete={{@onSelectAutocomplete}}
  @onSubmit={{@onSubmit}}
  @searchAsYouType={{@searchAsYouType}}
  ...attributes as |state|
>
  {{#let
    (build-autocomplete-groups
      autocompleteResults=state.autocompleteResults
      autocompletedResults=state.autocompletedResults
      autocompleteSuggestions=state.autocompleteSuggestions
      autocompletedSuggestions=state.autocompletedSuggestions
    ) as |groups|
  }}
    <form {{on "submit" state.onSubmit}}>
      <AutocompleteInput
        class="sui-search-box"
        @classIfOpen="autocomplete" as |menu|
      >
        <menu.Input @value={{state.value}} @onInput={{state.onChange}} />
        {{#if (and (gt state.allAutocompletedItemsCount 0) menu.isOpen)}}
          <menu.Items
            role="listbox"
            class="sui-search-box__autocomplete-container" as |items|
          >
            <div>
              {{#each groups as |group|}}
                {{#if (and group.groupName group.options)}}
                  <div class="sui-search-box__section-title">
                    {{group.groupName}}
                  </div>
                {{/if}}
                <ul class={{group.class}}>
                  {{#each group.options as |opt|}}
                    <items.Item as |item|>
                      <item.Element
                        @tagName="li"
                        aria-selected="{{item.isActive}}"
                        @onClick={{pipe
                          (if
                            group.isSuggestionGroup
                            (fn
                              state.completeSuggestion
                              (call (fn group.getText opt))
                            )
                            (fn state.onSelectAutocomplete opt)
                          )
                          menu.closeMenu
                        }}
                      >
                        <span>
                          {{{call (fn group.getText opt)}}}
                        </span>
                      </item.Element>
                    </items.Item>
                  {{/each}}
                </ul>
              {{/each}}
            </div>
          </menu.Items>
        {{/if}}
      </AutocompleteInput>
    </form>
  {{/let}}
</Containers::SearchBox>